# Request Tracker 4.0

## Installation
Install guide here: [[http://requesttracker.wikia.com/wiki/DebianSqueezeInstallGuide]]

*tl;dr:* squeeze-backports required

1. Install everything.

        sudo aptitude install mysql-server rt4-db-mysql rt4-apache2 request-tracker4 libapache-mod-auth-kerb

* Configuration:
     - Name: **$RTSERVER**.ocf.berkeley.edu
     - Handle RT_SiteConfig.pm permissions: yes
     - SQL password: ....

  Install RT::Extension::CommandByMail:

        sudo cpan RT::Extension::CommandByMail

  When prompted, the RT lib folder is located at `/usr/share/request-tracker4/lib`.

1. Copy site-specific RT configuration into `/etc/request-tracker4/RT_SiteConfig.d/99-ocf`: (this should be puppeted)

        Set($WebDomain, 'rt.ocf.berkeley.edu');
        Set($WebBaseURL , "http://rt.ocf.berkeley.edu:80");
        
        # Use external authentication provided by mod_auth_kerb
        Set($WebExternalAuth, 1);
        Set($WebFallbackToInternalAuth, 1);
        # tells RT to create users automatically if no user matching REMOTE_USER is found
        Set($WebExternalAuto, 1);
        
        # Mail plugin
        Set(@MailPlugins, qw(Auth::MailFrom Filter::TakeAction));
        Set(@Plugins,(qw(RT::Extension::CommandByMail)));

  Remove excess newlines courtesy of ikiwiki.

  Regenerate the resultant `RT_SiteConfig.pm` file:

        sudo update-rt-siteconfig

7. Copy site-specific Apache configuration `rt.conf` into `sites-available`:

        Alias /rt /usr/share/request-tracker4/html

        <Location /rt>
            SetHandler modperl
            PerlResponseHandler Plack::Handler::Apache2
            PerlSetVar psgi_app /usr/share/request-tracker4/libexec/rt-server

            # Comment this to enable root
            AuthType Kerberos
            Require valid-user

            KrbAuthRealms OCF.BERKELEY.EDU
            KrbMethodK5Passwd On
            KrbServiceName rt/rt.ocf.berkeley.edu
            Krb5KeyTab /etc/apache2/sites-available/rt.keytab
            # KrbSaveCredentials Off
            KrbLocalUserMapping On
        </Location>

        # Limit mail gateway access to localhost by default
        <Location /rt/REST/1.0/NoAuth>
            # No Kerberos
            Satisfy Any
            Order Allow,Deny
            Allow from 192.168.99.218
        </Location>

        <Location /rt/NoAuth>
            # No Kerberos
            Satisfy Any
            Order Allow,Deny
            Allow from All
        </Location>

        <Perl>
            use Plack::Handler::Apache2;
            Plack::Handler::Apache2->preload("/usr/share/request-tracker4/libexec/rt-server");
        </Perl>

  Please ignore the terrible formatting created by ikiwiki, and add this snippet into `sites-available/default`:

        Include sites-available/rt.conf
        RedirectMatch ^/$ /rt

8. Obtain a keytab for the principal rt/**$RTSERVER**@OCF.BERKELEY.EDU and place it into `sites-available/rt.keytab`. Make sure it's readable by www-data.

8. mod_auth_kerb uses Basic authorization which has no concept of login/logout. Emulate logout behavior by changing the Logout page to send a 401 (works for Chrome), run proprietary IE code (works for IE), and make an Ajax call to a non-existing page with bad credentials (works for Firefox).

  This should be fixed so that RT's installation files aren't being directly modified.

  Edit `/usr/share/request-tracker4/html/NoAuth/Logout.html`:

  Change 
    
        <& /Elements/Header, Title => loc('Logout'), Refresh => RT->Config->Get('LogoutRefresh') &>

  to

        <& /Elements/Header, Title => loc('Logout') &>

  and paste the following below it:

        <script type="text/javascript">
        function clearAuthenticationCache() {
          try {
            var agent = navigator.userAgent.toLowerCase();
            if (agent.indexOf("msie") != -1) {
              // This works only on IE only.
              document.execCommand("ClearAuthenticationCache");
            }
            else {
              var xml = createXMLObject();
              // Let's prepare invalid credentials
              xml.open("GET", Math.random().toString(), true, "logout", "logout");
              xml.send("");
              xml.abort();
            }
          } catch (e) {
            return;
          }
        }

        function createXMLObject() {
          try {
            if (window.XMLHttpRequest) {
              xml = new XMLHttpRequest();
            }
            else if (window.ActiveXObject) {
              xml = new ActiveXObject("Microsoft.XMLHTTP");
            }
          } catch (e) {
            xml = false
          }
          return xml;
        }

        clearAuthenticationCache();
        </script>
   
  Add the following before the end of the <%INIT> block at the end of the file:

        # "Force" logout due to using mod_auth_kerb -- Chrome
        $HTML::Mason::Commands::r->status(401);


8. Restart Apache.

9. Supposing the server RT is installed on isn't also the mail server, install the RT [mailgate program](http://requesttracker.wikia.com/wiki/EmailInterface#RT.27s_mail_gate) on the mail server.

  squeeze-backports is required here too.

        sudo aptitude install rt4-clients 

10. Set up rt@ to feed mail into rt-mailgate.

  Add or edit the following lines into `/var/mail/aliases/aliases`:

        rt: "|/usr/bin/rt-mailgate --queue General --action correspond --url http://typhoon.int.ocf.berkeley.edu/rt"
        rt-comment: "|/usr/bin/rt-mailgate --queue General --action comment --url http://typhoon.int.ocf.berkeley.edu/rt"

## Configuration

1. The RT root user can't log in while Kerberos password authentication is enabled because of the way mod_auth_kerb works. So, you must first log in with Kerberos credentials to create a user from Kerberos and grant superuser rights on it.

  Log in to RT. You will be auto-created and redirected to Self-Service.
  Disable Kerberos password authentication by commenting out the following lines in `sites-available/rt.conf` (Apache configuration):

        # AuthType Kerberos
        # Require valid-user

  Force-reload apache configuration (service apache2 force-reload) and visit RT again. Log in as RT root.

  Go to Tools > Configuration > Users > Select, and type in your username in "Go to user". Enable **Let this user be granted rights (Privileged)**.

  Go to Tools > Configuration > Global > User Rights. On the left side, in Add User, type your name. Then, on the right side, click the tab **Rights for Administrators**, and enable **Do anything and everything**.

  Save changes.

  You will want to remove your superuser powers later because superusers may be artificially limited in rights elsewhere on RT for your own protection: ["Starting from version 3.2 (or 3.4?) RT doesn't show users with the SuperUser right in a ticket owner select-box."](http://requesttracker.wikia.com/wiki/SuperUser)

  Re-enable Kerberos password authentication in Apache configuration and force-reload Apache.

1. Create groups. I've created root and staff groups; this configuration may change as our use of RT is refined. 
  
  Go to Tools > Configuration > Groups > Create and create "Root" and "Staff" groups. 

  Add users to these groups by the **Members** subsection in the upper right corner of the group modification page. (You can also alter a user's group memberships from the user's modification page.)

  In this configuration I see the set of RT privileged users to be the same as the set of users in group "Staff". This may change.

2. Enable user rights. [This](http://requesttracker.wikia.com/wiki/Rights) guide is being followed.

  Go to Tools > Configuration > Global > Group Rights.

  **Save your changes each time you make changes to a group's rights.**

  Make sure the selected group is **Everyone**.

  Select the following rights:
    - Comment on tickets
    - Create tickets
    - Reply to tickets
    - View queue
    - View ticket summaries

  Now add a group to add permissions to, from the bottom left: Add Group

  Add these rights to "Staff", in the "Rights for Staff" tab:
    - Delete tickets
    - Modify one's own RT account
    - Modify tickets
    - Own tickets
    - Steal tickets
    - Take tickets
    - View private ticket commentary

  Add these rights to "Root", in the "Rights for Administrators" tab:
    - Everything except "Do anything and everything"

3. Miscellaneous configuration

  Change RT root's info so he can be a front for staff@. (Tools > Configuration > Users > Select, click root, change email to staff@ocf.berkeley.edu and Real Name to OCF Staff).

  Make the General queue sound better: Tools > Configuration > Queues > Select, click General, change Description to "OCF Staff". (I think changing the Queue Name would be nice too. If you do that, remember to change the parameters to rt-mailgate in `/var/mail/aliases/aliases` and re-run newaliases on sandstorm.)

  Add root as a watcher for General so staff@ gets automatically Cc'ed to new tickets. Click Watchers in the upper right corner and add root.

4. Send more mail. 

  By default RT only sends an autoreply to the requestor on ticket creation. Create a new scrip (RT callback) so that Cc (staff@) gets notified on ticket creation as well.

  Create that which is to be mailed: go to Tools > Configuration > Global > Templates > Create.

  Create a template with the name "Correspondence Creation" and description "For mailing staff on ticket creation, but without all that boilerplate". Keep type as "Perl". Paste this in as the content:

        RT-Attach-Message: yes
        Subject: {$Ticket->Subject}

        {$Transaction->Content()}

  Remove the second newline caused by using ikiwiki. 

  Save changes.

  Create the scrip which uses this template: go to Tools > Configuration > Global > Scrips > Create. 

  Create a scrip with the following parameters:
    - Name: On Create Notify Ccs
    - Condition: On Create
    - Action: Notify Ccs
    - Template: Global Template: Correspondence Creation
    - Stage: TranscationCreate
  Save changes.

  By default RT sends AdminCc (Administrative Cc) gets mail on private comments (mail sent to rt-comment@). In this configuration, staff are all Ccs, so comment mail won't get sent. Change the existing scrip sending this mail to send it to Ccs on  comment instead.

  Go to Tools > Configuration > Global > Scrips > Select. Click "8 On Comment Notify AdminCcs as Comment". 
  
  Change the Description to "On Comment Notify Ccs as Comment" and the Action to "Notify Ccs as Comment".

  Save changes.

5. Automatically close tickets.

  This needs to be chained or something to send a template saying that the ticket is closed because it hasn't been modified in 30 days. I don't know what this entails, but the below is a start.

  Put the following into a crontab; you may want to create a rt system user to run this. 

        0 3 * * * /usr/bin/rt-crontool --search RT::Search::FromSQL \
        --search-arg "LastUpdated < '30 days ago' AND Status = 'open'" \
        --action RT::Action::SetStatus --action-arg resolved

  References: [1](http://lists.bestpractical.com/pipermail/rt-users/2005-February/028837.html) [2](http://requesttracker.wikia.com/wiki/UntouchedInHours) [3](http://requesttracker.wikia.com/wiki/TimedNotifications)

## Todo
* Fix Chrome double login, if possible.
* Set up ticket autoclose using [[http://requesttracker.wikia.com/wiki/UntouchedInHours]] or [[http://requesttracker.wikia.com/wiki/TimedNotifications]]
